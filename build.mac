# note this file is needed as libraries such as ntpd, zlib, jpeg etc do not have XCode projects, but use the Linux-style autoconf/automake
#!/bin/bash
export XCB=/Developer/usr/bin/xcodebuild
if (test "$1" = "all" || test "$2" = "all" || test "$1" = "libs" || test "$2" = "libs") then
export CXX=
export CC=
export MARCH=
export SDKROOT=
export LDFLAGS=
export CPPFLAGS=
export CFLAGS=
export CXXFLAGS=
# building ntpdate is really "special" and not just a lib...
#cd ntp-4.2.4p7
#chmod uog+rx build.mac
#./build.mac
#cd ../jpeg-6b
cd jpeg-6b
chmod uog+rx build.mac
./build.mac
cd ../bzip2-1.0.6
chmod uog+rx build.mac
./build.mac
cd ../zlib-1.2.5
chmod uog+rx build.mac
./build.mac
cd ../curl-7.21.7
chmod uog+rx build.mac
./build.mac
cd ../freetype-2.4.6
chmod uog+rx build.mac
./build.mac
cd ../ftgl-2.1.3
chmod uog+rx build.mac
./build.mac
cd ../
export CXX=
export CC=
export MARCH=
export SDKROOT=
export LDFLAGS=
export CPPFLAGS=
export CFLAGS=
export CXXFLAGS=
unzip -o boinc_xcode.zip -d ../boinc/mac_build/
unzip -o boinc_zip_xcode.zip -d ../boinc/zip/
cd ../boinc/mac_build
export XCB=/Developer/usr/bin/xcodebuild
$XCB -project boinc.xcodeproj -configuration Deployment -target libboinc clean build
$XCB USER_HEADER_SEARCH_PATHS='../lib ../../qcn/jpeg-6b /usr/X11R6/include' -project boinc.xcodeproj -configuration Deployment -target api_libboinc clean build
$XCB USER_HEADER_SEARCH_PATHS='../lib ../../qcn/jpeg-6b /usr/X11R6/include' -project boinc.xcodeproj -configuration Deployment -target gfx2libboinc clean build
mv build/Deployment/*.a ../../qcn/client/mac_build/
cd ../zip
$XCB -project boinc_zip.xcodeproj -configuration Deployment -target boinc_zip clean build
mv build/Release/libboinc_zip.a ../../qcn/client/mac_build/
cd ../../qcn
  if (test "$1" = "libs" || test "$2" = "libs") then
    exit
  fi
fi
export CXX=
export CC=
export MARCH=
export SDKROOT=
export LDFLAGS=
export CPPFLAGS=
export CFLAGS=
export CXXFLAGS=
cd client/mac_build
$XCB -project qcn.xcodeproj -configuration Release -target qcn clean build
$XCB -project qcn.xcodeproj -configuration Release -target qcn_graphics clean build
$XCB -project qcn.xcodeproj -configuration Release -target qcnusb clean build
#$XCB -project qcn.xcodeproj -configuration Release -target QCNLive clean build
cd ../qcnlive_qt
rm -rf QCNLive.app
$XCB -project QCNLive.xcodeproj -configuration Release -target QCNLive clean build
/usr/bin/macdeployqt ./QCNLive.app
FRWL=/Library/Frameworks/libcurl.framework
FRWQ=QCNLive.app/Contents/Frameworks/libcurl.framework/
mkdir $FRWQ
cp -r $FRWL/Resources $FRWQ
cp -r $FRWL/Versions $FRWQ
# get rid of all the extra libraries
cp ../../doc/qcnmac.icns QCNLive.app/Contents/Resources/
rm -rf QCNLive.app/Contents/Frameworks/QtDeclarative.framework
rm -rf QCNLive.app/Contents/Frameworks/QtNetwork.framework
rm -rf QCNLive.app/Contents/Frameworks/QtScript.framework
rm -rf QCNLive.app/Contents/Frameworks/QtSql.framework
rm -rf QCNLive.app/Contents/Frameworks/QtSvg.framework
rm -rf QCNLive.app/Contents/Frameworks/QtXmlPatterns.framework
rm -rf ../bin/QCNLive.app
cp -r QCNLive.app ../bin/
cd ../bin
