# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.9
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_QCNBounds', [dirname(__file__)])
        except ImportError:
            import _QCNBounds
            return _QCNBounds
        if fp is not None:
            try:
                _mod = imp.load_module('_QCNBounds', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _QCNBounds = swig_import_helper()
    del swig_import_helper
else:
    import _QCNBounds
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


class QCNBounds(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, QCNBounds, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, QCNBounds, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _QCNBounds.new_QCNBounds(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _QCNBounds.delete_QCNBounds
    __del__ = lambda self : None;
    def _print(self): return _QCNBounds.QCNBounds__print(self)
    __swig_setmethods__["xw"] = _QCNBounds.QCNBounds_xw_set
    __swig_getmethods__["xw"] = _QCNBounds.QCNBounds_xw_get
    if _newclass:xw = _swig_property(_QCNBounds.QCNBounds_xw_get, _QCNBounds.QCNBounds_xw_set)
    __swig_setmethods__["yw"] = _QCNBounds.QCNBounds_yw_set
    __swig_getmethods__["yw"] = _QCNBounds.QCNBounds_yw_get
    if _newclass:yw = _swig_property(_QCNBounds.QCNBounds_yw_get, _QCNBounds.QCNBounds_yw_set)
    __swig_setmethods__["zw"] = _QCNBounds.QCNBounds_zw_set
    __swig_getmethods__["zw"] = _QCNBounds.QCNBounds_zw_get
    if _newclass:zw = _swig_property(_QCNBounds.QCNBounds_zw_get, _QCNBounds.QCNBounds_zw_set)
    __swig_setmethods__["x_min"] = _QCNBounds.QCNBounds_x_min_set
    __swig_getmethods__["x_min"] = _QCNBounds.QCNBounds_x_min_get
    if _newclass:x_min = _swig_property(_QCNBounds.QCNBounds_x_min_get, _QCNBounds.QCNBounds_x_min_set)
    __swig_setmethods__["x_max"] = _QCNBounds.QCNBounds_x_max_set
    __swig_getmethods__["x_max"] = _QCNBounds.QCNBounds_x_max_get
    if _newclass:x_max = _swig_property(_QCNBounds.QCNBounds_x_max_get, _QCNBounds.QCNBounds_x_max_set)
    __swig_setmethods__["y_min"] = _QCNBounds.QCNBounds_y_min_set
    __swig_getmethods__["y_min"] = _QCNBounds.QCNBounds_y_min_get
    if _newclass:y_min = _swig_property(_QCNBounds.QCNBounds_y_min_get, _QCNBounds.QCNBounds_y_min_set)
    __swig_setmethods__["y_max"] = _QCNBounds.QCNBounds_y_max_set
    __swig_getmethods__["y_max"] = _QCNBounds.QCNBounds_y_max_get
    if _newclass:y_max = _swig_property(_QCNBounds.QCNBounds_y_max_get, _QCNBounds.QCNBounds_y_max_set)
    __swig_setmethods__["z_min"] = _QCNBounds.QCNBounds_z_min_set
    __swig_getmethods__["z_min"] = _QCNBounds.QCNBounds_z_min_get
    if _newclass:z_min = _swig_property(_QCNBounds.QCNBounds_z_min_get, _QCNBounds.QCNBounds_z_min_set)
    __swig_setmethods__["z_max"] = _QCNBounds.QCNBounds_z_max_set
    __swig_getmethods__["z_max"] = _QCNBounds.QCNBounds_z_max_get
    if _newclass:z_max = _swig_property(_QCNBounds.QCNBounds_z_max_get, _QCNBounds.QCNBounds_z_max_set)
    __swig_setmethods__["dx"] = _QCNBounds.QCNBounds_dx_set
    __swig_getmethods__["dx"] = _QCNBounds.QCNBounds_dx_get
    if _newclass:dx = _swig_property(_QCNBounds.QCNBounds_dx_get, _QCNBounds.QCNBounds_dx_set)
    __swig_setmethods__["dy"] = _QCNBounds.QCNBounds_dy_set
    __swig_getmethods__["dy"] = _QCNBounds.QCNBounds_dy_get
    if _newclass:dy = _swig_property(_QCNBounds.QCNBounds_dy_get, _QCNBounds.QCNBounds_dy_set)
    __swig_setmethods__["dz"] = _QCNBounds.QCNBounds_dz_set
    __swig_getmethods__["dz"] = _QCNBounds.QCNBounds_dz_get
    if _newclass:dz = _swig_property(_QCNBounds.QCNBounds_dz_get, _QCNBounds.QCNBounds_dz_set)
    __swig_setmethods__["nx"] = _QCNBounds.QCNBounds_nx_set
    __swig_getmethods__["nx"] = _QCNBounds.QCNBounds_nx_get
    if _newclass:nx = _swig_property(_QCNBounds.QCNBounds_nx_get, _QCNBounds.QCNBounds_nx_set)
    __swig_setmethods__["ny"] = _QCNBounds.QCNBounds_ny_set
    __swig_getmethods__["ny"] = _QCNBounds.QCNBounds_ny_get
    if _newclass:ny = _swig_property(_QCNBounds.QCNBounds_ny_get, _QCNBounds.QCNBounds_ny_set)
    __swig_setmethods__["nz"] = _QCNBounds.QCNBounds_nz_set
    __swig_getmethods__["nz"] = _QCNBounds.QCNBounds_nz_get
    if _newclass:nz = _swig_property(_QCNBounds.QCNBounds_nz_get, _QCNBounds.QCNBounds_nz_set)
    __swig_setmethods__["lon_factor"] = _QCNBounds.QCNBounds_lon_factor_set
    __swig_getmethods__["lon_factor"] = _QCNBounds.QCNBounds_lon_factor_get
    if _newclass:lon_factor = _swig_property(_QCNBounds.QCNBounds_lon_factor_get, _QCNBounds.QCNBounds_lon_factor_set)
QCNBounds_swigregister = _QCNBounds.QCNBounds_swigregister
QCNBounds_swigregister(QCNBounds)

# This file is compatible with both classic and new-style classes.


